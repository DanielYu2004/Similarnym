{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","loading","suggested","selected","word","bind","node","document","getElementsByClassName","addEventListener","event","key","value","length","setState","childNodes","textContent","prevState","i","classList","remove","add","this","definition","url","fetch","response","json","data","results","push","responsee","dataa","undefined","shortdef","words","e","text","target","suggest","className","onClick","reset","type","placeholder","onInput","inputChange","map","style","borderRadius","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8051cbcc.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\nclass App extends React.Component{\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      loading : false,\r\n      suggested : [],\r\n      selected : null, \r\n      word : null\r\n    }\r\n    this.word = this.word.bind(this)\r\n  }\r\n\r\n  componentDidMount(){\r\n    const node = document.getElementsByClassName(\"input\")[0];\r\n    node.addEventListener(\"keyup\", (event) => {\r\n        if (event.key === \"Enter\") {\r\n          if (node.value !== \"\"){\r\n            this.word()\r\n          }\r\n        }\r\n\r\n        if (this.state.suggested.length !== 0){\r\n          if (event.key === \"ArrowDown\") {\r\n\r\n            if (this.state.selected === null){\r\n              this.setState({\r\n                selected : 0\r\n              })\r\n              node.value = document.getElementsByClassName(\"suggested-list\")[0].childNodes[this.state.selected].textContent\r\n            }\r\n            else if (this.state.selected < this.state.suggested.length - 1){\r\n              this.setState( (prevState) => {\r\n                return({selected : prevState.selected + 1})\r\n              })\r\n              node.value = document.getElementsByClassName(\"suggested-list\")[0].childNodes[this.state.selected].textContent\r\n  \r\n            }\r\n            else if (this.state.selected === this.state.suggested.length - 1){\r\n              this.setState({selected : 0})\r\n              node.value = document.getElementsByClassName(\"suggested-list\")[0].childNodes[this.state.selected].textContent\r\n            }\r\n          }\r\n          if (event.key === \"ArrowUp\"){\r\n            if (this.state.selected > 0 && this.state.selected < this.state.suggested.length){\r\n              this.setState((prevState) => {\r\n                return({selected : prevState.selected - 1})\r\n              })\r\n              node.value = document.getElementsByClassName(\"suggested-list\")[0].childNodes[this.state.selected].textContent\r\n            }\r\n            else if (this.state.suggested.length <= this.state.selected){\r\n              this.setState({selected : this.state.suggested.length - 2})\r\n            }\r\n            else if (this.state.suggested.length > 0){\r\n              this.setState((prevState) => {\r\n                return({selected : this.state.suggested.length - 1})\r\n              })\r\n              node.value = document.getElementsByClassName(\"suggested-list\")[0].childNodes[this.state.selected].textContent\r\n\r\n            }\r\n          }\r\n          if (this.state.selected !== null){            \r\n            for (var i = 0; i < this.state.suggested.length; i++){\r\n              document.getElementsByClassName(\"suggested-list\")[0].childNodes[i].classList.remove(\"selected\");\r\n              //document.getElementsByClassName(\"suggested-list\")[0].childNodes[i].style.background = \"#e4eaf5\"\r\n            }\r\n            if (this.state.selected < this.state.suggested.length && this.state.selected >= 0){\r\n              document.getElementsByClassName(\"suggested-list\")[0].childNodes[this.state.selected].classList.add(\"selected\");\r\n            }\r\n            else{\r\n              document.getElementsByClassName(\"suggested-list\")[0].childNodes[this.state.suggested.length - 1].classList.add(\"selected\");\r\n            }\r\n\r\n            //document.getElementsByClassName(\"suggested-list\")[0].childNodes[this.state.selected].style.background = \"black\"\r\n          }\r\n        }\r\n    });    \r\n  }\r\n\r\n  async word(){\r\n\r\n    const word = document.getElementsByClassName(\"input\")[0].value\r\n    if (word !== \"\"){\r\n      this.setState({\r\n        suggested: [], \r\n        loading: true,\r\n        word : null,\r\n        definition: null\r\n      })\r\n      //console.log(\"sending word:\" , word)\r\n      const url = \"http://cors-anywhere.herokuapp.com/http://api.datamuse.com/words?max=70&ml=\" + word\r\n      const response = await fetch(url)\r\n      const data = await response.json()\r\n  \r\n      //console.log(\"Receieved data:\", data)\r\n      const results = []\r\n  \r\n      for (var i = 0; i < data.length; i++){\r\n        results.push(data[i].word)\r\n      }\r\n\r\n\r\n\r\n      const responsee = await fetch(\"http://www.dictionaryapi.com/api/v3/references/collegiate/json/\" + word +\"?key=7e6d05cf-f2ff-4571-bcdc-c93c05e8a98b\")\r\n      const dataa = await responsee.json()\r\n      //console.log(dataa)\r\n      \r\n      var definition = \"unavailable\"\r\n      if (dataa[0] !== undefined){\r\n        if (dataa[0].shortdef !== undefined){\r\n          definition = dataa[0].shortdef[0] \r\n        }\r\n      }\r\n\r\n\r\n\r\n\r\n      this.setState({\r\n        words: results,\r\n        suggested : [],\r\n        loading : false,\r\n        selected : null,\r\n        word: word,\r\n        definition: definition\r\n      })\r\n\r\n      document.getElementsByClassName(\"input\")[0].value = \"\"\r\n\r\n    }\r\n  }\r\n\r\n  suggested(e){\r\n    const text = e.target.textContent\r\n    document.getElementsByClassName(\"input\")[0].value = text\r\n    this.word()\r\n\r\n  }\r\n\r\n\r\n  async inputChange(){\r\n    const text = document.getElementsByClassName(\"input\")[0].value\r\n    //console.log(text)\r\n    if (text === \"\"){\r\n      this.setState({\r\n        suggested : [],\r\n        selected : null\r\n      })\r\n    }\r\n    else{\r\n      const response = await fetch(\"http://api.datamuse.com/sug?max=8&s=\" + text)\r\n      const data = await response.json()\r\n      //console.log(data)\r\n  \r\n      const suggest = []\r\n    \r\n      for (var i = 0; i < data.length; i++){\r\n        suggest.push(data[i].word)\r\n      }\r\n  \r\n      this.setState({\r\n        suggested : suggest\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  reset(){\r\n    this.setState({\r\n      definition: null,\r\n      words : null, \r\n      word : null,\r\n      suggested : [],\r\n      selected : null\r\n    })\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"App\" >\r\n        <div className=\"content-div\">\r\n          <div className=\"title-div\">\r\n            <div onClick={() => this.reset()} className=\"title\">Similarnym</div>\r\n            <div className=\"subtitle\">similar meanings with similar applications</div>\r\n\r\n          </div>\r\n\r\n          <div className=\"input-div\">\r\n              <button className=\"btn btn-primary\" onClick={() => this.word()} >Find</button>\r\n              <div className=\"text-input\">\r\n                <input type='text' className=\"input form-control\" placeholder=\"Search something!\" onInput={ () => this.inputChange()}></input>\r\n                <div className=\"suggested-div\">\r\n                  <ul className=\"suggested-list\"> \r\n                    {this.state.suggested ? this.state.suggested.map((word,key) => \r\n                    {if (key === this.state.suggested.length-1){\r\n                    return <li style={{borderRadius: \"0 0 7px 7px\"}}key={key}className=\"suggested-li\" onClick={(e) => this.suggested(e)}><div className=\"li-word\">{word}</div></li>\r\n                    }\r\n                    else{\r\n                    return <li key={key}className=\"suggested-li\" onClick={(e) => this.suggested(e)}><div className=\"li-word\">{word}</div></li>\r\n                    }\r\n                    }) : null}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          <div className=\"words-div\">\r\n            {this.state.word ? <div className=\"definition-div\"><div className=\"definition-word\">{this.state.word}</div><div className=\"definition\">{this.state.definition}</div></div>: null}  \r\n            {this.state.words  && !this.state.loading ? this.state.words.map((word, key) => <div className=\"word-syn\" onClick={(e) => this.suggested(e)} key={key}>{word}</div>) : (this.state.loading ? <div> Loading... </div>: null)}\r\n          </div>\r\n        </div>     \r\n        <div className=\"filler-div\"></div>\r\n        <div className=\"footer-div\">\r\n            Developed by Daniel Yu\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}